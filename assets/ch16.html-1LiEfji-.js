import{_ as e,c as t,o as n,d as i}from"./app-D-7GWyFc.js";const a={},s=i('<h1 id="chapter-16-modifying-existing-code" tabindex="-1"><a class="header-anchor" href="#chapter-16-modifying-existing-code"><span>Chapter 16 Modifying Existing Code</span></a></h1><p>Chapter 1 described how software development is iterative and incremental. A large software system develops through a series of evolutionary stages, where each stage adds new capabilities and modifies existing modules. This means that a system’s design is constantly evolving. It isn’t possible to conceive the right design for a system at the outset; the design of a mature system is determined more by changes made during the system’s evolution than by any initial conception. Previous chapters described how to squeeze out complexity during the initial design and implementation; this chapter discusses how to keep complexity from creeping in as the system evolves.</p><h2 id="_16-1-stay-strategic" tabindex="-1"><a class="header-anchor" href="#_16-1-stay-strategic"><span>16.1 Stay strategic</span></a></h2><h2 id="_16-2-maintaining-comments-keep-the-comments-near-the-code" tabindex="-1"><a class="header-anchor" href="#_16-2-maintaining-comments-keep-the-comments-near-the-code"><span>16.2 Maintaining comments: keep the comments near the code</span></a></h2><h2 id="_16-3-comments-belong-in-the-code-not-the-commit-log" tabindex="-1"><a class="header-anchor" href="#_16-3-comments-belong-in-the-code-not-the-commit-log"><span>16.3 Comments belong in the code, not the commit log</span></a></h2><h2 id="_16-4-maintaining-comments-avoid-duplication" tabindex="-1"><a class="header-anchor" href="#_16-4-maintaining-comments-avoid-duplication"><span>16.4 Maintaining comments: avoid duplication</span></a></h2><h2 id="_16-5-maintaining-comments-check-the-diffs" tabindex="-1"><a class="header-anchor" href="#_16-5-maintaining-comments-check-the-diffs"><span>16.5 Maintaining comments: check the diffs</span></a></h2><h2 id="_16-6-higher-level-comments-are-easier-to-maintain" tabindex="-1"><a class="header-anchor" href="#_16-6-higher-level-comments-are-easier-to-maintain"><span>16.6 Higher-level comments are easier to maintain</span></a></h2>',8),o=[s];function c(m,h){return n(),t("div",null,o)}const r=e(a,[["render",c],["__file","ch16.html.vue"]]),d=JSON.parse('{"path":"/en/ch16.html","title":"Chapter 16 Modifying Existing Code","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"16.1 Stay strategic","slug":"_16-1-stay-strategic","link":"#_16-1-stay-strategic","children":[]},{"level":2,"title":"16.2 Maintaining comments: keep the comments near the code","slug":"_16-2-maintaining-comments-keep-the-comments-near-the-code","link":"#_16-2-maintaining-comments-keep-the-comments-near-the-code","children":[]},{"level":2,"title":"16.3 Comments belong in the code, not the commit log","slug":"_16-3-comments-belong-in-the-code-not-the-commit-log","link":"#_16-3-comments-belong-in-the-code-not-the-commit-log","children":[]},{"level":2,"title":"16.4 Maintaining comments: avoid duplication","slug":"_16-4-maintaining-comments-avoid-duplication","link":"#_16-4-maintaining-comments-avoid-duplication","children":[]},{"level":2,"title":"16.5 Maintaining comments: check the diffs","slug":"_16-5-maintaining-comments-check-the-diffs","link":"#_16-5-maintaining-comments-check-the-diffs","children":[]},{"level":2,"title":"16.6 Higher-level comments are easier to maintain","slug":"_16-6-higher-level-comments-are-easier-to-maintain","link":"#_16-6-higher-level-comments-are-easier-to-maintain","children":[]}],"git":{"updatedTime":1718508798000},"filePathRelative":"en/ch16.md"}');export{r as comp,d as data};
